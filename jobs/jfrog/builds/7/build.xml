<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1174.1176.va_29023983d67">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@629.vb_5627b_ee2104">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2064.v5eef7d0982b_e">
      <stagesUUID>647545bd-9c10-4e98-8fef-bb7c969e5e7c</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2064.v5eef7d0982b_e">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Checkout</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>git</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>branch</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">main</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>credentialsId</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">githubid</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>url</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">https://github.com/sunilkumarksk/simplejavaapp.git</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Build</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">mvn clean install</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">mvn deploy</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>App Deploy</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def logContent = Jenkins.getInstance()
               .getItemByFullName(env.JOB_NAME)
               .getBuildByNumber(
                   Integer.parseInt(env.BUILD_NUMBER))
                   .logFile.text
// copy the log in the job&apos;s own workspace
                writeFile file: &quot;buildlog.txt&quot;, text: logContent

              sh &apos;match=$(cat buildlog.txt | grep &quot;Uploaded: http://localhost:8081/artifactory/libs-snapshot-local/org/cloudifysource/examples/java-hello-world-webapp/[0-9].[0-9]-SNAPSHOT/java-hello-world-webapp-[0-9].[0-9]-.*.war&quot;)&apos;
              sh &apos;url=($match)&apos;
              sh &apos;wget ${url[1]}&apos;
              sh &apos;cp *.war /home/sunilkumark1994/sunil/tomcat/apache-tomcat-8.5.78/webapps/&apos;
              sh &apos;rm *.war&apos;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>647545bd-9c10-4e98-8fef-bb7c969e5e7c</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1214.v1de940103927">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.5">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/main</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.2">
              <sha1>44f977d93f8e983493ada8ee53e811f07d981411</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/main</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>7</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/sunilkumarksk/simplejavaapp.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@400.v6b_89a_1317c9a_">
      <revisionStates>
        <entry>
          <string>git https://github.com/sunilkumarksk/simplejavaapp.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@3601.v9b_36a_d99e1cc">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>11</queueId>
  <timestamp>1673848112073</timestamp>
  <startTime>1673848112077</startTime>
  <result>FAILURE</result>
  <duration>10790</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
  agent any

  stages {
    stage(&apos;Checkout&apos;) {
      steps {
        git branch: &apos;main&apos;, credentialsId: &apos;githubid&apos;, url: &apos;https://github.com/sunilkumarksk/simplejavaapp.git&apos;
      }
    }
//    stage(&apos;sonarqube&apos;) {
//      steps {
//        withSonarQubeEnv(&apos;sonarqube-7.6&apos;) {
//          sh &apos;mvn sonar:sonar&apos;
//        }
//      }
//    }
//    stage(&quot;Quality Gate&quot;) {
//      steps {
//        timeout(time: 5, unit: &apos;MINUTES&apos;) {
//          waitForQualityGate abortPipeline: true
//        }
//      }
//    }
    stage(&quot;Build&quot;) {
      steps {
        sh &apos;mvn clean install&apos;
        sh &apos;mvn deploy&apos;
      }
    }
    stage(&quot;App Deploy&quot;) {
      steps {
          script {
               def logContent = Jenkins.getInstance()
               .getItemByFullName(env.JOB_NAME)
               .getBuildByNumber(
                   Integer.parseInt(env.BUILD_NUMBER))
                   .logFile.text
// copy the log in the job&apos;s own workspace
                writeFile file: &quot;buildlog.txt&quot;, text: logContent

              sh &apos;match=$(cat buildlog.txt | grep &quot;Uploaded: http://localhost:8081/artifactory/libs-snapshot-local/org/cloudifysource/examples/java-hello-world-webapp/[0-9].[0-9]-SNAPSHOT/java-hello-world-webapp-[0-9].[0-9]-.*.war&quot;)&apos;
              sh &apos;url=($match)&apos;
              sh &apos;wget ${url[1]}&apos;
              sh &apos;cp *.war /home/sunilkumark1994/sunil/tomcat/apache-tomcat-8.5.78/webapps/&apos;
              sh &apos;rm *.war&apos;
          }

             // script{
               //         sh &apos;echo Insidescripts&apos;
                        
//                    def logContent = Jenkins.getInstance().getItemByFullName(env.JOB_NAME).getBuildByNumber(Integer.parseInt(env.BUILD_NUMBER)).logFile.text
            //        cat logContent | grep &apos;Uploaded: http://localhost:8081/artifactory/libs-snapshot-local/org/cloudifysource/examples/java-hello-world-webapp/[0-9].[0-9]-SNAPSHOT/java-hello-world-webapp-[0-9].[0-9]-.*.war&apos;

 //                  manager.getLogMatcher(&apos;Uploaded: http://localhost:8081/artifactory/libs-snapshot-local/org/cloudifysource/examples/java-hello-world-webapp/[0-9].[0-9]-SNAPSHOT/java-hello-world-webapp-[0-9].[0-9]-.*.war&apos;)
//}
//          sh &apos;sudo chmod -R 777 /home/sunilkumark1994/sunil/tomcat/apache-tomcat-8.5.78/webapps&apos;
//                sh &apos;sudo cp ./target/java-hello-world.war /home/sunilkumark1994/sunil/tomcat/apache-tomcat-8.5.78/webapps/&apos;
      }
   }

  }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="concurrent-hash-map">
      <entry>
        <string>flowNode</string>
        <long>415936150</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>373124975</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1777833173</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>98385334</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>818342510</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>26</iota>
    <head>1:26</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.5">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/sunilkumarksk/simplejavaapp.git</url>
            <credentialsId>githubid</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/main</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>main</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/jfrog</workspace>
      <changelogFile>/var/lib/jenkins/jobs/jfrog/builds/7/changelog10071977874851552790.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>